#!/bin/sh
set -eoux

export POSIXLY_CORRECT=1

if [ ! -f './project.clj' -a ! -f './build.boot' ]
then
    echo "This script must be run from the root of the project."
fi

root_path=${PWD}
test_home=test/resources/data/test-index-sort-order

name=$(lein print :name | sed 's|"||g')
version=$(lein print :version | sed 's|"||g')

rm -rf "${test_home}"
mkdir -p "${test_home}"
cd "${test_home}"

# First, generate the needed cards for resolution.

java -jar ${root_path}/target/uberjar/${name}-${version}-standalone.jar \
     generate-card \
     -i "a" \
     -v "1.0.0" \
     -l "https://example.com/repo/a-1.0.0.zip" \
     -C $PWD/a-1.0.0.zip.dscard

java -jar ${root_path}/target/uberjar/${name}-${version}-standalone.jar \
     generate-card \
     -i "a" \
     -v "2.0.0" \
     -l "https://example.com/repo/a-2.0.0.zip" \
     -C $PWD/a-2.0.0.zip.dscard

java -jar ${root_path}/target/uberjar/${name}-${version}-standalone.jar generate-repo-index -O ascending -d $PWD -I $PWD/ascending.dsrepo

java -jar ${root_path}/target/uberjar/${name}-${version}-standalone.jar generate-repo-index --index-sort-order descending -d $PWD -I $PWD/descending.dsrepo

if java -jar ${root_path}/target/uberjar/${name}-${version}-standalone.jar \
    resolve-locations \
    -R ${PWD}/descending.dsrepo \
    --requirement "a" | grep -F -q '1.0.0'
then
    exit 1
fi

if java -jar ${root_path}/target/uberjar/${name}-${version}-standalone.jar \
    resolve-locations \
    -R ${PWD}/ascending.dsrepo \
    --requirement "a" | grep -F -q '2.0.0'
then
    exit 1
fi
