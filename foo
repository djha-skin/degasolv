
lein test degasolv.pkgsys.apt-test
spy => "http://us.archive.ubuntu.com/ubuntu/"
maps => ({:package "a11y-profile-manager", :version "0.1.11-0ubuntu3", :depends "liba11y-profile-manager-0.1-0 (>= 0.1.11), libc6 (>= 2.4), libglib2.0-0 (>= 2.26.0)", :filename "pool/main/a/a11y-profile-manager/a11y-profile-manager_0.1.11-0ubuntu3_amd64.deb"} {:package "a11y-profile-manager-doc", :version "0.1.11-0ubuntu3", :filename "pool/main/a/a11y-profile-manager/a11y-profile-manager-doc_0.1.11-0ubuntu3_all.deb"})
pkg in each-package => {:package "a11y-profile-manager", :version "0.1.11-0ubuntu3", :depends "liba11y-profile-manager-0.1-0 (>= 0.1.11), libc6 (>= 2.4), libglib2.0-0 (>= 2.26.0)", :filename "pool/main/a/a11y-profile-manager/a11y-profile-manager_0.1.11-0ubuntu3_amd64.deb"}
add-pkg-location pkg => {:package "a11y-profile-manager", :version "0.1.11-0ubuntu3", :depends [[#degasolv.resolver.Requirement{:status :present, :id "liba11y-profile-manager-0.1-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "0.1.11"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libc6", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.4"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libglib2.0-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.26.0"}]]}]], :filename "pool/main/a/a11y-profile-manager/a11y-profile-manager_0.1.11-0ubuntu3_amd64.deb"}
pkg in each-package => {:package "a11y-profile-manager-doc", :version "0.1.11-0ubuntu3", :filename "pool/main/a/a11y-profile-manager/a11y-profile-manager-doc_0.1.11-0ubuntu3_all.deb"}
add-pkg-location pkg => {:package "a11y-profile-manager-doc", :version "0.1.11-0ubuntu3", :filename "pool/main/a/a11y-profile-manager/a11y-profile-manager-doc_0.1.11-0ubuntu3_all.deb"}
packages sample => ([#degasolv.resolver.PackageInfo{:id "a11y-profile-manager", :version "0.1.11-0ubuntu3", :location "http://us.archive.ubuntu.com/ubuntu/pool/main/a/a11y-profile-manager/a11y-profile-manager_0.1.11-0ubuntu3_amd64.deb", :requirements [[#degasolv.resolver.Requirement{:status :present, :id "liba11y-profile-manager-0.1-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "0.1.11"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libc6", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.4"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libglib2.0-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.26.0"}]]}]]}] [#degasolv.resolver.PackageInfo{:id "a11y-profile-manager-doc", :version "0.1.11-0ubuntu3", :location "http://us.archive.ubuntu.com/ubuntu/pool/main/a/a11y-profile-manager/a11y-profile-manager-doc_0.1.11-0ubuntu3_all.deb", :requirements nil}])
packages sample2 => (#degasolv.resolver.PackageInfo{:id "a11y-profile-manager", :version "0.1.11-0ubuntu3", :location "http://us.archive.ubuntu.com/ubuntu/pool/main/a/a11y-profile-manager/a11y-profile-manager_0.1.11-0ubuntu3_amd64.deb", :requirements [[#degasolv.resolver.Requirement{:status :present, :id "liba11y-profile-manager-0.1-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "0.1.11"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libc6", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.4"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libglib2.0-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.26.0"}]]}]]} #degasolv.resolver.PackageInfo{:id "a11y-profile-manager-doc", :version "0.1.11-0ubuntu3", :location "http://us.archive.ubuntu.com/ubuntu/pool/main/a/a11y-profile-manager/a11y-profile-manager-doc_0.1.11-0ubuntu3_all.deb", :requirements nil})
reduction => {}
reduction => {"a11y-profile-manager" [#degasolv.resolver.PackageInfo{:id "a11y-profile-manager", :version "0.1.11-0ubuntu3", :location "http://us.archive.ubuntu.com/ubuntu/pool/main/a/a11y-profile-manager/a11y-profile-manager_0.1.11-0ubuntu3_amd64.deb", :requirements [[#degasolv.resolver.Requirement{:status :present, :id "liba11y-profile-manager-0.1-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "0.1.11"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libc6", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.4"}]]}] [#degasolv.resolver.Requirement{:status :present, :id "libglib2.0-0", :spec [[#degasolv.resolver.VersionPredicate{:relation :greater-equal, :version "2.26.0"}]]}]]}]}

lein test degasolv.resolve-data-spec-test
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]
dbg: result = [b [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip}]
dbg: result = [b [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]
dbg: result = [b [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip}]
dbg: result = [b [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip}]
dbg: result = [b [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip}]
dbg: result = [b [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]
dbg: result = [b [{:id b, :version 1.0.0, :location http://example.com/repo/b-1.0.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 1.7.0, :location http://example.com/repo/b-1.7.0.zip, :requirements []} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip, :requirements [[{:status :present, :id c, :spec [[{:relation :greater-equal, :version 3.5.0}]]}] [{:status :present, :id d}]]}]
dbg: result = [b [{:id b, :version 1.7.0, :location http://example.com/repo/b-1.7.0.zip, :requirements []} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip, :requirements [[{:status :present, :id c, :spec [[{:relation :greater-equal, :version 3.5.0}]]}] [{:status :present, :id d}]]}]]
dbg: nm = d
dbg: (get m nm) = [{:id d, :version 0.8.0, :location http://example.com/repo/d-0.8.0.zip, :requirements [[{:status :present, :id e, :spec [[{:relation :greater-equal, :version 1.1.0} {:relation :less-than, :version 2.0.0}]]}]]}]
dbg: result = [d [{:id d, :version 0.8.0, :location http://example.com/repo/d-0.8.0.zip, :requirements [[{:status :present, :id e, :spec [[{:relation :greater-equal, :version 1.1.0} {:relation :less-than, :version 2.0.0}]]}]]}]]
dbg: nm = e
dbg: (get m nm) = [{:id e, :version 2.4.0, :location http://exmaple.com/repo/e-2.4.0.zip} {:id e, :version 2.1.0, :location http://exmaple.com/repo/e-2.1.0.zip, :requirements []} {:id e, :version 1.8.0, :location http://exmaple.com/repo/e-1.8.0.zip, :requirements []}]
dbg: result = [e [{:id e, :version 2.4.0, :location http://exmaple.com/repo/e-2.4.0.zip} {:id e, :version 2.1.0, :location http://exmaple.com/repo/e-2.1.0.zip, :requirements []} {:id e, :version 1.8.0, :location http://exmaple.com/repo/e-1.8.0.zip, :requirements []}]]
dbg: nm = c
dbg: (get m nm) = [{:id c, :version 2.4.7, :location http://example.com/repo/c-2.4.7.zip, :requirements []} {:id c, :version 3.5.0, :requirements [[{:status :present, :id e, :spec [[{:relation :greater-equal, :version 1.8.0}]]}]], :location http://example.com/repo/c-3.5.0.zip}]
dbg: result = [c [{:id c, :version 2.4.7, :location http://example.com/repo/c-2.4.7.zip, :requirements []} {:id c, :version 3.5.0, :requirements [[{:status :present, :id e, :spec [[{:relation :greater-equal, :version 1.8.0}]]}]], :location http://example.com/repo/c-3.5.0.zip}]]

lein test degasolv.resolve-interesting-cases-test
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 1.0.0, :location http://example.com/repo/a-1.0.0.zip, :requirements [[{:status :present, :id b}]]}]
dbg: result = [a [{:id a, :version 1.0.0, :location http://example.com/repo/a-1.0.0.zip, :requirements [[{:status :present, :id b}]]}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip}]
dbg: result = [b [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip} {:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip}]]
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 1.0.0, :location http://example.com/repo/a-1.0.0.zip, :requirements [[{:status :present, :id b}]]}]
dbg: result = [a [{:id a, :version 1.0.0, :location http://example.com/repo/a-1.0.0.zip, :requirements [[{:status :present, :id b}]]}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]
dbg: result = [b [{:id b, :version 2.0.0, :location http://example.com/repo/b-2.0.0.zip} {:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]]
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 1.0.0, :location http://example.com/repo/a-1.0.0.zip, :requirements [[{:status :present, :id b}]]}]
dbg: result = [a [{:id a, :version 1.0.0, :location http://example.com/repo/a-1.0.0.zip, :requirements [[{:status :present, :id b}]]}]]
dbg: nm = b
dbg: (get m nm) = [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]
dbg: result = [b [{:id b, :version 2.3.0, :location http://example.com/repo/b-2.3.0.zip}]]
dbg: nm = c
dbg: (get m nm) = [{:id c, :version 3.5.3, :location http://example.com/repo/c-3.5.3.zip}]
dbg: result = [c [{:id c, :version 3.5.3, :location http://example.com/repo/c-3.5.3.zip}]]

lein test degasolv.resolve-repo-aggregation-test
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 10, :location loc_a}]
dbg: result = [a [{:id a, :version 10, :location loc_a}]]
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 10, :location loc_a10}]
dbg: result = [a [{:id a, :version 10, :location loc_a10}]]
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 20, :location loc_a20} {:id a, :version 30, :location loc_a30}]
dbg: result = [a [{:id a, :version 20, :location loc_a20} {:id a, :version 30, :location loc_a30}]]
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 10, :location loc_a}]
dbg: result = [a [{:id a, :version 10, :location loc_a}]]
dbg: nm = a
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 10, :location loc_a10}]
dbg: result = [a [{:id a, :version 10, :location loc_a10}]]
dbg: nm = a
dbg: (get m nm) = [{:id a, :version 20, :location loc_a20} {:id a, :version 30, :location loc_a30}]
dbg: result = [a [{:id a, :version 20, :location loc_a20} {:id a, :version 30, :location loc_a30}]]

lein test degasolv.resolve-string-to-req-test

lein test degasolv.resolve-test
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :absent, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :absent, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14887$fn__14890 0x461f295c degasolv.resolve_test$fn__14883$fn__14887$fn__14890@461f295c]}]]}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14887$fn__14890 0x461f295c degasolv.resolve_test$fn__14883$fn__14887$fn__14890@461f295c]}]]}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 4, :location d_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 3, :location d_loc3, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 4, :location d_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 3, :location d_loc3, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14887$fn__14888 0x34ceefb5 degasolv.resolve_test$fn__14883$fn__14887$fn__14888@34ceefb5]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14887$fn__14888 0x34ceefb5 degasolv.resolve_test$fn__14883$fn__14887$fn__14888@34ceefb5]}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14899 0x2cef4321 degasolv.resolve_test$fn__14883$fn__14894$fn__14899@2cef4321]}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14901 0x29c471f6 degasolv.resolve_test$fn__14883$fn__14894$fn__14901@29c471f6]}]]}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14899 0x2cef4321 degasolv.resolve_test$fn__14883$fn__14894$fn__14899@2cef4321]}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14901 0x29c471f6 degasolv.resolve_test$fn__14883$fn__14894$fn__14901@29c471f6]}]]}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 4, :location d_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 3, :location d_loc3, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 4, :location d_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 3, :location d_loc3, :requirements nil}]]
dbg: nm = e
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id e, :version 6, :location e_loc6, :requirements nil} #degasolv.resolver.PackageInfo{:id e, :version 5, :location e_loc5, :requirements nil}]
dbg: result = [e [#degasolv.resolver.PackageInfo{:id e, :version 6, :location e_loc6, :requirements nil} #degasolv.resolver.PackageInfo{:id e, :version 5, :location e_loc5, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14895 0x6654e105 degasolv.resolve_test$fn__14883$fn__14894$fn__14895@6654e105]}] [#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14897 0x59be715a degasolv.resolve_test$fn__14883$fn__14894$fn__14897@59be715a]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14895 0x6654e105 degasolv.resolve_test$fn__14883$fn__14894$fn__14895@6654e105]}] [#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14897 0x59be715a degasolv.resolve_test$fn__14883$fn__14894$fn__14897@59be715a]}]]}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14895 0x6654e105 degasolv.resolve_test$fn__14883$fn__14894$fn__14895@6654e105]}] [#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14897 0x59be715a degasolv.resolve_test$fn__14883$fn__14894$fn__14897@59be715a]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14895 0x6654e105 degasolv.resolve_test$fn__14883$fn__14894$fn__14895@6654e105]}] [#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14894$fn__14897 0x59be715a degasolv.resolve_test$fn__14883$fn__14894$fn__14897@59be715a]}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14908 0x6a8a54f5 degasolv.resolve_test$fn__14883$fn__14905$fn__14908@6a8a54f5]}]]}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14908 0x6a8a54f5 degasolv.resolve_test$fn__14883$fn__14905$fn__14908@6a8a54f5]}]]}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 2, :location d_loc2, :requirements [[#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14912 0x39d0775c degasolv.resolve_test$fn__14883$fn__14905$fn__14912@39d0775c]}]]} #degasolv.resolver.PackageInfo{:id d, :version 1, :location d_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14910 0x8802edd degasolv.resolve_test$fn__14883$fn__14905$fn__14910@8802edd]}]]}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 2, :location d_loc2, :requirements [[#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14912 0x39d0775c degasolv.resolve_test$fn__14883$fn__14905$fn__14912@39d0775c]}]]} #degasolv.resolver.PackageInfo{:id d, :version 1, :location d_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id e, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14910 0x8802edd degasolv.resolve_test$fn__14883$fn__14905$fn__14910@8802edd]}]]}]]
dbg: nm = e
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id e, :version 4, :location e_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id 3, :version 3, :location e_loc3, :requirements nil}]
dbg: result = [e [#degasolv.resolver.PackageInfo{:id e, :version 4, :location e_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id 3, :version 3, :location e_loc3, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14906 0x40a1916d degasolv.resolve_test$fn__14883$fn__14905$fn__14906@40a1916d]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14906 0x40a1916d degasolv.resolve_test$fn__14883$fn__14905$fn__14906@40a1916d]}]]}]]
dbg: nm = e
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id e, :version 4, :location e_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id 3, :version 3, :location e_loc3, :requirements nil}]
dbg: result = [e [#degasolv.resolver.PackageInfo{:id e, :version 4, :location e_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id 3, :version 3, :location e_loc3, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14906 0x40a1916d degasolv.resolve_test$fn__14883$fn__14905$fn__14906@40a1916d]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14905$fn__14906 0x40a1916d degasolv.resolve_test$fn__14883$fn__14905$fn__14906@40a1916d]}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14916 0x35c55050 degasolv.resolve_test$fn__14883$fn__14916@35c55050]}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14916 0x35c55050 degasolv.resolve_test$fn__14883$fn__14916@35c55050]}]]}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 4, :location d_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 3, :location d_loc3, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 2, :location d_loc2, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 4, :location d_loc4, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 3, :location d_loc3, :requirements nil} #degasolv.resolver.PackageInfo{:id d, :version 2, :location d_loc2, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14918 0x2a0154f7 degasolv.resolve_test$fn__14883$fn__14918@2a0154f7]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14918 0x2a0154f7 degasolv.resolve_test$fn__14883$fn__14918@2a0154f7]}]]}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14918 0x2a0154f7 degasolv.resolve_test$fn__14883$fn__14918@2a0154f7]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14918 0x2a0154f7 degasolv.resolve_test$fn__14883$fn__14918@2a0154f7]}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14920 0x237e61ac degasolv.resolve_test$fn__14883$fn__14920@237e61ac]}]]}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14920 0x237e61ac degasolv.resolve_test$fn__14883$fn__14920@237e61ac]}]]}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14918 0x2a0154f7 degasolv.resolve_test$fn__14883$fn__14918@2a0154f7]}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 1, :location b_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}] [#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14918 0x2a0154f7 degasolv.resolve_test$fn__14883$fn__14918@2a0154f7]}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14920 0x237e61ac degasolv.resolve_test$fn__14883$fn__14920@237e61ac]}]]}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 1, :location c_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id d, :spec #object[degasolv.resolve_test$fn__14883$fn__14920 0x237e61ac degasolv.resolve_test$fn__14883$fn__14920@237e61ac]}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements [[#degasolv.resolver.Requirement{:status :present, :id a, :spec nil}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements [[#degasolv.resolver.Requirement{:status :present, :id a, :spec nil}]]}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements [[#degasolv.resolver.Requirement{:status :present, :id a, :spec nil}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements [[#degasolv.resolver.Requirement{:status :present, :id a, :spec nil}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]]
dbg: nm = b
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements nil}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements nil}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]]
dbg: nm = e
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = nil
dbg: result = nil
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]} #degasolv.resolver.PackageInfo{:id a, :version 20, :location a_loc20, :requirements nil}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 22, :location d_loc22, :requirements nil}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil} #degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 1, :location a_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil} #degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]]
dbg: nm = d
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id d, :version 1, :location d_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil} #degasolv.resolver.Requirement{:status :absent, :id e, :spec nil}]]}]
dbg: result = [d [#degasolv.resolver.PackageInfo{:id d, :version 1, :location d_loc1, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil} #degasolv.resolver.Requirement{:status :absent, :id e, :spec nil}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements nil}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements nil}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 30, :location a_loc30, :requirements [[#degasolv.resolver.Requirement{:status :present, :id b, :spec nil}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 10, :location a_loc10, :requirements nil}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 10, :location a_loc10, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 20, :location b_loc20, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements [[#degasolv.resolver.Requirement{:status :absent, :id a, :spec nil}]]}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements [[#degasolv.resolver.Requirement{:status :absent, :id a, :spec nil}]]}]]
dbg: nm = a
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id a, :version 10, :location a_loc10, :requirements nil}]
dbg: result = [a [#degasolv.resolver.PackageInfo{:id a, :version 10, :location a_loc10, :requirements nil}]]
dbg: nm = b
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id b, :version 10, :location b_loc10, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]
dbg: result = [b [#degasolv.resolver.PackageInfo{:id b, :version 10, :location b_loc10, :requirements [[#degasolv.resolver.Requirement{:status :present, :id c, :spec nil}]]}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]]
dbg: nm = c
dbg: (get m nm) = [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]
dbg: result = [c [#degasolv.resolver.PackageInfo{:id c, :version 10, :location c_loc10, :requirements nil}]]

lein test degasolv.util-test

Ran 20 tests containing 73 assertions.
0 failures, 0 errors.
